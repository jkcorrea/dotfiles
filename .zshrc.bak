unsetopt nomatch # allow for HEAD^ in git commands
setopt HIST_IGNORE_ALL_DUPS

export PATH="$PATH:/usr/local/sbin:$HOME/go/bin"
export VISUAL=code
export EDITOR=code
export GPG_TTY=$(tty) # For GPG to work on Mac
export LANG=en_US.UTF-8
export HOMEBREW_NO_AUTO_UPDATE=1 # faster brew install

# Load some other configs
[ -s ${HOME}/.zsh_local ] && source ~/.zsh_local
[ -s ${HOME}/.zsh_aliases ] && source ~/.zsh_aliases

# Load asdf (cache for perf)
if [ -f ~/.asdf_brew_cache ]; then
  source ~/.asdf_brew_cache
else
  if brew --prefix --installed asdf &>/dev/null; then
    echo "source $(brew --prefix asdf)/libexec/asdf.sh" >~/.asdf_brew_cache
    source ~/.asdf_brew_cache
  else
    echo "[WARN] asdf not found, skipping..."
  fi
fi

# Keybindings for substring search plugin. Maps up and down arrows.
bindkey -M main '^[OA' history-substring-search-up
bindkey -M main '^[OB' history-substring-search-down
bindkey -M main '^[[A' history-substring-search-up
bindkey -M main '^[[B' history-substring-search-down

# Keybindings for autosuggestions plugin
bindkey '^ ' autosuggest-accept
bindkey '^f' autosuggest-accept

# Gray color for autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=247'

# fzf settings. Uses sharkdp/fd for a faster alternative to `find`.
# Load fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Use fzf/fd (https://github.com/sharkdp/fd) instead of the default find command for listing path candidates.
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Use fd to generate the list for directory completion
export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'

# Key bindings for command-line fuzzy completion
bindkey '^T' fzf-completion
bindkey '^I' fzf-completion

# Options for fzf-history-widget
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview'"

# Override the default 'find' command with a custom function
find() {
  echo "Consider using fzf for an interactive file search experience!"
  echo "Usage:"
  echo "  CTRL+T : Paste the selected files and directories onto the command-line"
  echo "  ALT+C  : cd into the selected directory"
  echo "  CTRL+R : Search command history"
  echo ""
  echo "Falling back to the standard 'find' command..."
  echo ""
  command find "$@"
}
## end fzf

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# TODO - which can we lazy load?
# Plugins!
export ZPLUG_HOME=/opt/homebrew/opt/zplug
source $ZPLUG_HOME/init.zsh
zplug "zpm-zsh/ls"
zplug "woefe/wbase.zsh"
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search", defer:3
zplug "MichaelAquilina/zsh-autoswitch-virtualenv"
zplug "zdharma-continuum/fast-syntax-highlighting", defer:2
zplug "plugins/git", from:oh-my-zsh, lazy:true
zplug "plugins/httpie", from:oh-my-zsh, lazy:true
zplug "plugins/docker", from:oh-my-zsh, lazy:true
zplug "plugins/docker-compose", from:oh-my-zsh, lazy:true
# zplug "woefe/git-prompt.zsh", use:"{git-prompt.zsh,examples/wprompt.zsh}"
# zplug "b4b4r07/enhancd"

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
  printf "Install? [y/N]: "
  if read -q; then
    echo
    zplug install
  fi
fi

# Then, source plugins and add commands to $PATH
zplug load

[ -f "/Users/jkcorrea/.ghcup/env" ] && source "/Users/jkcorrea/.ghcup/env" # ghcup-env

fpath+=~/.zfunc

# pnpm
export PNPM_HOME="/Users/jkcorrea/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# bun completions
[ -s "/Users/jkcorrea/.bun/_bun" ] && source "/Users/jkcorrea/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# sst
export PATH=/Users/jkcorrea/.sst/bin:$PATH

# PUT THESE LAST
eval "$(zoxide init zsh)"
# Enable Starship prompt https://starship.rs/guide/#ðŸš€-installation
eval "$(starship init zsh)"
